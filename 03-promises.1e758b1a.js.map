{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,kBACpCE,EAAYH,SAASC,cAAc,iBACnCG,EAAcJ,SAASC,cAAc,mBA2B3C,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAnCPQ,EAAAlB,GAASmB,OAAOC,KAAK,yCAErBlB,EAAKmB,iBAAiB,UAAU,SAAAC,GAC9BA,EAAEC,iBAMF,IAJA,IAAIC,EAAeC,OAAOpB,EAAWqB,OAC/BC,EAAcF,OAAOnB,EAAUoB,OAC/BE,EAAgBH,OAAOlB,EAAYmB,OAEhCG,EAAI,EAAGA,GAAKD,EAAeC,GAAK,EACvCrB,EAAcqB,EAAGL,GACdM,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBQ,EAAAlB,GAASmB,OAAOa,QACd,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAGjDwB,OAAM,SAAAH,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBQ,EAAAlB,GAASmB,OAAOgB,QACd,sBAAuCF,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAGnDc,GAAgBG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst delayInput = document.querySelector('[name=\"delay\"]');\nconst stepInput = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\n\nNotiflix.Notify.info('Please, select your preferences below');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  let currentDelay = Number(delayInput.value);\n  const currentStep = Number(stepInput.value);\n  const currentAmount = Number(amountInput.value);\n\n  for (let i = 1; i <= currentAmount; i += 1) {\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    currentDelay += currentStep;\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delayInput","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$parcel$interopDefault","Notify","info","addEventListener","e","preventDefault","currentDelay","Number","value","currentStep","currentAmount","i","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.1e758b1a.js.map"}